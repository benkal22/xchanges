# Generated by Django 5.0.6 on 2024-06-22 12:33

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('manager_name', models.CharField(max_length=100)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo de profil entreprise')),
                ('address', models.CharField(max_length=255)),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nrc', models.CharField(blank=True, max_length=100, null=True)),
                ('nat_id', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('sector_label', models.CharField(blank=True, max_length=200, null=True)),
                ('about', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_actived', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_code', models.CharField(max_length=20)),
                ('sector_label', models.CharField(max_length=150)),
                ('activity_code', models.CharField(max_length=20)),
                ('activity_label', models.CharField(max_length=150)),
                ('product_code', models.CharField(max_length=20)),
                ('product_label', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('chef_lieu', models.CharField(max_length=150, null=True)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_client_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('country', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_personal_client', to='inventory.producer')),
            ],
        ),
        migrations.AddField(
            model_name='producer',
            name='product',
            field=models.ManyToManyField(blank=True, related_name='producers', to='inventory.product'),
        ),
        migrations.AddField(
            model_name='producer',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_province', to='inventory.province'),
        ),
        migrations.CreateModel(
            name='CompanyClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('manager_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('tax_code', models.CharField(max_length=100, null=True)),
                ('nrc', models.CharField(max_length=100, null=True)),
                ('nat_id', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('country', models.CharField(max_length=100)),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_company_client', to='inventory.producer')),
                ('product', models.ManyToManyField(to='inventory.product')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_client_province', to='inventory.province')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('tva', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_client_sale', to='inventory.companyclient')),
                ('personal_client_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personal_client_sale', to='inventory.personalclient')),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_sale', to='inventory.producer')),
                ('product', models.ManyToManyField(to='inventory.product')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('manager_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('tax_code', models.CharField(max_length=100, null=True)),
                ('nrc', models.CharField(max_length=100, null=True)),
                ('nat_id', models.CharField(max_length=100, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('sector_label', models.CharField(blank=True, max_length=200, null=True)),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_supplier', to='inventory.producer')),
                ('product', models.ManyToManyField(blank=True, to='inventory.product')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_province', to='inventory.province')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('tva', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('date', models.DateField()),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producer_purchase', to='inventory.producer')),
                ('product', models.ManyToManyField(to='inventory.product')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_purchase', to='inventory.supplier')),
            ],
        ),
    ]
